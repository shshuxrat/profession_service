// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: position_attribute.proto

package profession_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PositionAttributeServiceClient is the client API for PositionAttributeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PositionAttributeServiceClient interface {
	Create(ctx context.Context, in *CreatePositionAttribute, opts ...grpc.CallOption) (*PositionAttributeId, error)
	GetAll(ctx context.Context, in *GetAllPositionAttributeRequest, opts ...grpc.CallOption) (*GetAllPositionAttributeResponse, error)
	GetById(ctx context.Context, in *PositionAttributeId, opts ...grpc.CallOption) (*GetPositionAttribute, error)
	Update(ctx context.Context, in *PositionAttribute, opts ...grpc.CallOption) (*AfterPositionAttributeUpdate, error)
	Delete(ctx context.Context, in *PositionAttributeId, opts ...grpc.CallOption) (*IsDeletedPA, error)
}

type positionAttributeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPositionAttributeServiceClient(cc grpc.ClientConnInterface) PositionAttributeServiceClient {
	return &positionAttributeServiceClient{cc}
}

func (c *positionAttributeServiceClient) Create(ctx context.Context, in *CreatePositionAttribute, opts ...grpc.CallOption) (*PositionAttributeId, error) {
	out := new(PositionAttributeId)
	err := c.cc.Invoke(ctx, "/genproto.PositionAttributeService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionAttributeServiceClient) GetAll(ctx context.Context, in *GetAllPositionAttributeRequest, opts ...grpc.CallOption) (*GetAllPositionAttributeResponse, error) {
	out := new(GetAllPositionAttributeResponse)
	err := c.cc.Invoke(ctx, "/genproto.PositionAttributeService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionAttributeServiceClient) GetById(ctx context.Context, in *PositionAttributeId, opts ...grpc.CallOption) (*GetPositionAttribute, error) {
	out := new(GetPositionAttribute)
	err := c.cc.Invoke(ctx, "/genproto.PositionAttributeService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionAttributeServiceClient) Update(ctx context.Context, in *PositionAttribute, opts ...grpc.CallOption) (*AfterPositionAttributeUpdate, error) {
	out := new(AfterPositionAttributeUpdate)
	err := c.cc.Invoke(ctx, "/genproto.PositionAttributeService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionAttributeServiceClient) Delete(ctx context.Context, in *PositionAttributeId, opts ...grpc.CallOption) (*IsDeletedPA, error) {
	out := new(IsDeletedPA)
	err := c.cc.Invoke(ctx, "/genproto.PositionAttributeService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PositionAttributeServiceServer is the server API for PositionAttributeService service.
// All implementations must embed UnimplementedPositionAttributeServiceServer
// for forward compatibility
type PositionAttributeServiceServer interface {
	Create(context.Context, *CreatePositionAttribute) (*PositionAttributeId, error)
	GetAll(context.Context, *GetAllPositionAttributeRequest) (*GetAllPositionAttributeResponse, error)
	GetById(context.Context, *PositionAttributeId) (*GetPositionAttribute, error)
	Update(context.Context, *PositionAttribute) (*AfterPositionAttributeUpdate, error)
	Delete(context.Context, *PositionAttributeId) (*IsDeletedPA, error)
	mustEmbedUnimplementedPositionAttributeServiceServer()
}

// UnimplementedPositionAttributeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPositionAttributeServiceServer struct {
}

func (UnimplementedPositionAttributeServiceServer) Create(context.Context, *CreatePositionAttribute) (*PositionAttributeId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedPositionAttributeServiceServer) GetAll(context.Context, *GetAllPositionAttributeRequest) (*GetAllPositionAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (UnimplementedPositionAttributeServiceServer) GetById(context.Context, *PositionAttributeId) (*GetPositionAttribute, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (UnimplementedPositionAttributeServiceServer) Update(context.Context, *PositionAttribute) (*AfterPositionAttributeUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedPositionAttributeServiceServer) Delete(context.Context, *PositionAttributeId) (*IsDeletedPA, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedPositionAttributeServiceServer) mustEmbedUnimplementedPositionAttributeServiceServer() {
}

// UnsafePositionAttributeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PositionAttributeServiceServer will
// result in compilation errors.
type UnsafePositionAttributeServiceServer interface {
	mustEmbedUnimplementedPositionAttributeServiceServer()
}

func RegisterPositionAttributeServiceServer(s grpc.ServiceRegistrar, srv PositionAttributeServiceServer) {
	s.RegisterService(&PositionAttributeService_ServiceDesc, srv)
}

func _PositionAttributeService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePositionAttribute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionAttributeServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PositionAttributeService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionAttributeServiceServer).Create(ctx, req.(*CreatePositionAttribute))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionAttributeService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPositionAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionAttributeServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PositionAttributeService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionAttributeServiceServer).GetAll(ctx, req.(*GetAllPositionAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionAttributeService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionAttributeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionAttributeServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PositionAttributeService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionAttributeServiceServer).GetById(ctx, req.(*PositionAttributeId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionAttributeService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionAttribute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionAttributeServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PositionAttributeService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionAttributeServiceServer).Update(ctx, req.(*PositionAttribute))
	}
	return interceptor(ctx, in, info, handler)
}

func _PositionAttributeService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionAttributeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionAttributeServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PositionAttributeService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionAttributeServiceServer).Delete(ctx, req.(*PositionAttributeId))
	}
	return interceptor(ctx, in, info, handler)
}

// PositionAttributeService_ServiceDesc is the grpc.ServiceDesc for PositionAttributeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PositionAttributeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.PositionAttributeService",
	HandlerType: (*PositionAttributeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PositionAttributeService_Create_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _PositionAttributeService_GetAll_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _PositionAttributeService_GetById_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PositionAttributeService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PositionAttributeService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "position_attribute.proto",
}
